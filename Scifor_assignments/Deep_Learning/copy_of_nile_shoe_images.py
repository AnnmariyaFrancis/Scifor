# -*- coding: utf-8 -*-
"""Copy of nile_shoe_images.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1O1CmutkmWVbzux3C4L-XrO_pdhvgTGVY
"""

import pandas as pd
import matplotlib.pyplot as plt
import cv2
from skimage.transform import resize
from skimage.io import imread
import os
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Conv2D,MaxPool2D,Dense,Flatten

os.listdir('/content/drive/MyDrive/nike_shoes_image/test')

os.listdir('/content/drive/MyDrive/nike_shoes_image/train')

datadir='/content/drive/MyDrive/nike_shoes_image/train'
datadir

X_train=[]
y_train=[]
categories=['adidas','nike']
for i in categories:
  path=os.path.join(datadir,i)
  images=os.listdir(path)
  for image in images:
    img_path=os.path.join(path,image)
    img_array=imread(img_path)
    img_resized=resize(img_array,(150,150,1))
    X_train.append(img_resized)
    y_train.append(categories.index(i))
print('loaded categoires',i)

datadir='/content/drive/MyDrive/nike_shoes_image/test'

X_test=[]
y_test=[]
categories=['adidas','nike']
for i in categories:
  path=os.path.join(datadir,i)
  images=os.listdir(path)
  for image in images:
    img_path=os.path.join(path,image)
    img_array=imread(img_path)
    img_resized=resize(img_array,(150,150,1))
    X_test.append(img_resized)
    y_test.append(categories.index(i))
print('loaded categoires',i)

import numpy as np
X_train=np.array(X_train)
X_test=np.array(X_test)
y_test=np.array(y_test)
y_train=np.array(y_train)

model=Sequential()
model.add(Conv2D(32,(3,3),input_shape=(150,150,1),activation='relu'))
model.add(MaxPool2D(2,2))
model.add(Conv2D(32,(3,3),activation='relu'))
model.add(MaxPool2D(2,2))
model.add(Conv2D(32,(3,3),activation='relu'))
model.add(MaxPool2D(2,2))
model.add(Flatten())
model.add(Dense(10,activation='relu'))
model.add(Dense(2,activation='softmax'))

model.compile(optimizer='adam',loss='sparse_categorical_crossentropy',metrics=['accuracy'])

model.fit(X_train,y_train,batch_size=100,epochs=20)

loss,accuarcy=model.evaluate(X_test,y_test)

img=imread('/content/drive/MyDrive/nike_shoes_image/test/adidas/Adidas (18).jpg')
plt.imshow(img)

img=resize(img,(150,150,1))
img_array=np.array(img)
img_array.shape

img_array=img_array.reshape(1,150,150,1)

pred=model.predict(img_array)

ind=pred.argmax()
print(ind)

print(categories[ind])